{
  "contractName": "SuperfluidGovernanceIIProxy",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAddress",
          "type": "address"
        }
      ],
      "name": "initializeProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Superfluid IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!\",\"kind\":\"dev\",\"methods\":{\"initializeProxy(address)\":{\"details\":\"Proxy initialization function.      This should only be called once and it is permission-less.\",\"params\":{\"initialAddress\":\"Initial logic contract code address to be used.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A proxy for governance which is both ownable and upgradable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/gov/SuperfluidGovernanceII.sol\":\"SuperfluidGovernanceIIProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/gov/SuperfluidGovernanceBase.sol\":{\"keccak256\":\"0xed336f9dace3de4f955f3b7589a9341ef81270edc616205fdbb3ce181a804f41\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://451ba24b9987a16624223d4c620722a072bab937a0d5ae2f9db93a1b99ee2fe7\",\"dweb:/ipfs/QmT8nBsYKemB9Mfh7A6o7dUgSgLeNpSUL29VcSCTWQqTrs\"]},\"project:/contracts/gov/SuperfluidGovernanceII.sol\":{\"keccak256\":\"0xab3303299ab44d8acb7928d5030814039f7a414d807a799c82c7b8024fbe1f9f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://001806646a7857c68852aaf0cc27462541cbbb5bfdac7ed0f9aba9b9b112d334\",\"dweb:/ipfs/QmNUkhWBqopUQiVs9HtAwef3QkMYPEgm2vnZqwjyQhmkfW\"]},\"project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xbbd5d7daa0206a39d15d349f69e6771d670c03fb394d65999f49db4fa21aeb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39db99750d43aebbb620a555a999016040c6f7b6e40eef61b9dcb49c8ac2a7da\",\"dweb:/ipfs/QmXsu29JWviUVnNxJZi1KRAK8GSEsyKdWyPLAJ6NzR7y4W\"]},\"project:/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"project:/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"project:/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"project:/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"project:/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"project:/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"project:/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"project:/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"project:/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"project:/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"project:/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x556040f5f2bfda069dd867d52b67b4b6a8e3d2955beac16d4156d91559bbdeac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13d190401b4f36f3c0977e0eadb9c774173bcbc2552d72de5bd6e7803d67c996\",\"dweb:/ipfs/QmfBTdKGzmbbjRxca5XLwpE2FX3S8onGLNHNpMpqWqjY4m\"]},\"project:/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103de8061007e6000396000f3fe6080604052600436106100435760003560e01c80634a0687ef1461005a578063715018a61461007a5780638da5cb5b1461008f578063f2fde38b146100bb57610052565b36610052576100506100db565b005b6100506100db565b34801561006657600080fd5b50610050610075366004610378565b6100ed565b34801561008657600080fd5b506100506101f3565b34801561009b57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100c757600080fd5b506100506100d6366004610378565b610205565b6100eb6100e661027b565b6102aa565b565b6001600160a01b0381166101485760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101727f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101c85760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a65640000604482015260640161013f565b6101f0817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6101fb6102ce565b6100eb6000610328565b61020d6102ce565b6001600160a01b0381166102725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013f565b6101f081610328565b60006102a57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156102c9573d6000f35b3d6000fd5b6000546001600160a01b031633146100eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038a57600080fd5b81356001600160a01b03811681146103a157600080fd5b939250505056fea26469706673582212206d5b86b626689b3af0934e2d5412bbc9a0dadafe004b81053699c972d381a2a864736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80634a0687ef1461005a578063715018a61461007a5780638da5cb5b1461008f578063f2fde38b146100bb57610052565b36610052576100506100db565b005b6100506100db565b34801561006657600080fd5b50610050610075366004610378565b6100ed565b34801561008657600080fd5b506100506101f3565b34801561009b57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100c757600080fd5b506100506100d6366004610378565b610205565b6100eb6100e661027b565b6102aa565b565b6001600160a01b0381166101485760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101727f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101c85760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a65640000604482015260640161013f565b6101f0817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6101fb6102ce565b6100eb6000610328565b61020d6102ce565b6001600160a01b0381166102725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013f565b6101f081610328565b60006102a57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156102c9573d6000f35b3d6000fd5b6000546001600160a01b031633146100eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038a57600080fd5b81356001600160a01b03811681146103a157600080fd5b939250505056fea26469706673582212206d5b86b626689b3af0934e2d5412bbc9a0dadafe004b81053699c972d381a2a864736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1989:124",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:124",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:124"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:124"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:124",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:124",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:124"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:124"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:124"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:124"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:124"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:124",
                "type": ""
              }
            ],
            "src": "14:286:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:102:124",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:124"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "473:6:124"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "489:3:124",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "494:1:124",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:124"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "485:11:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "498:1:124",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:19:124"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "469:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "469:32:124"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:51:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:51:124"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:124",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:124",
                "type": ""
              }
            ],
            "src": "305:203:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "687:173:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "704:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "715:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "697:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "754:2:124",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "727:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "777:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "788:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:18:124"
                      },
                      {
                        "hexValue": "5555505350726f78793a207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "793:25:124",
                        "type": "",
                        "value": "UUPSProxy: zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:53:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:53:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "828:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "840:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "851:2:124",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "828:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddef727975921b7952b7e20fd4290233907fcf50863b08b5223d979ede27321e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "664:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "678:4:124",
                "type": ""
              }
            ],
            "src": "513:347:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1039:180:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1067:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1049:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1049:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1090:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1101:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1086:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1086:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1106:2:124",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1079:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1129:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1140:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:18:124"
                      },
                      {
                        "hexValue": "5555505350726f78793a20616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1145:32:124",
                        "type": "",
                        "value": "UUPSProxy: already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1118:60:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1118:60:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1199:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:124",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1195:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1187:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b83493ae559d613bdaa11f876d4e817b661ed75187e4a486b85abafea5a50e6c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1016:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1030:4:124",
                "type": ""
              }
            ],
            "src": "865:354:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:228:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1408:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1449:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1460:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1445:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1445:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:2:124",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1438:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1438:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1488:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:18:124"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1504:34:124",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1477:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:62:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:62:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1559:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1570:2:124",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1555:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1555:18:124"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1575:8:124",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1548:36:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1548:36:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1593:27:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1616:3:124",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1601:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1601:19:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1593:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1375:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:124",
                "type": ""
              }
            ],
            "src": "1224:402:124"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1805:182:124",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:21:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:21:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1856:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:2:124",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:18:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:30:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1845:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:124"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:124",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:124"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1911:34:124",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:62:124"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1884:62:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:26:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1967:9:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:2:124",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:18:124"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1955:4:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1782:9:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1796:4:124",
                "type": ""
              }
            ],
            "src": "1631:356:124"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ddef727975921b7952b7e20fd4290233907fcf50863b08b5223d979ede27321e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UUPSProxy: zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b83493ae559d613bdaa11f876d4e817b661ed75187e4a486b85abafea5a50e6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"UUPSProxy: already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 124,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "654:62:41:-:0;;;;;;;;;;;;-1:-1:-1;936:32:4;719:10:18;936:18:4;:32::i;:::-;654:62:41;;2426:187:4;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;654:62:41:-;;;;;;;",
  "deployedSourceMap": "654:62:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:5;:9;:11::i;:::-;654:62:41;;2675:11:5;:9;:11::i;897:285:109:-;;;;;;;;;;-1:-1:-1;897:285:109;;;;;:::i;:::-;;:::i;1824:101:4:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:4;1273:6;1201:85;;;-1:-1:-1;;;;;1273:6:4;;;451:51:124;;1201:85:4;;;;;439:2:124;1201:85:4;;;2074:198;;;;;;;;;;-1:-1:-1;2074:198:4;;;;;:::i;:::-;;:::i;2322:110:5:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;897:285:109:-;-1:-1:-1;;;;;973:28:109;;965:64;;;;-1:-1:-1;;;965:64:109;;715:2:124;965:64:109;;;697:21:124;754:2;734:18;;;727:30;793:25;773:18;;;766:53;836:18;;965:64:109;;;;;;;;;1085:1;1047:26;751:20:110;745:27;;618:170;1047:26:109;-1:-1:-1;;;;;1047:40:109;;1039:83;;;;-1:-1:-1;;;1039:83:109;;1067:2:124;1039:83:109;;;1049:21:124;1106:2;1086:18;;;1079:30;1145:32;1125:18;;;1118:60;1195:18;;1039:83:109;865:354:124;1039:83:109;1132:43;1160:14;988:20:110;964:87;839:228;1132:43:109;897:285;:::o;1824:101:4:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;2074:198::-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:4;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:4;;1426:2:124;2154:73:4::1;::::0;::::1;1408:21:124::0;1465:2;1445:18;;;1438:30;1504:34;1484:18;;;1477:62;-1:-1:-1;;;1555:18:124;;;1548:36;1601:19;;2154:73:4::1;1224:402:124::0;2154:73:4::1;2237:28;2256:8;2237:18;:28::i;1238:130:109:-:0;1305:7;1335:26;751:20:110;745:27;;618:170;1335:26:109;1328:33;;1238:130;:::o;948:895:5:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;1359:130:4;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:18;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;1833:2:124;1414:68:4;;;1815:21:124;;;1852:18;;;1845:30;1911:34;1891:18;;;1884:62;1963:18;;1414:68:4;1631:356:124;2426:187:4;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:286:124:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:124;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:124:o",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.19;\n\nimport { UUPSProxy } from \"../upgradability/UUPSProxy.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { UUPSProxiable } from \"../upgradability/UUPSProxiable.sol\";\nimport { SuperfluidGovernanceBase } from \"./SuperfluidGovernanceBase.sol\";\nimport { ISuperfluid } from \"../interfaces/superfluid/ISuperfluid.sol\";\n\n/**\n * @title A proxy for governance which is both ownable and upgradable\n * @author Superfluid\n * IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!\n */\n// solhint-disable-next-line no-empty-blocks\ncontract SuperfluidGovernanceIIProxy is Ownable, UUPSProxy { }\n\ncontract SuperfluidGovernanceII is\n    Ownable,\n    UUPSProxiable,\n    SuperfluidGovernanceBase\n{\n    error SF_GOV_II_ONLY_OWNER();\n    function _requireAuthorised() private view {\n        if (owner() != _msgSender()) revert SF_GOV_II_ONLY_OWNER();\n    }\n\n    /**************************************************************************\n    * UUPSProxiable\n    **************************************************************************/\n\n    function proxiableUUID() public pure override returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\");\n    }\n\n    function updateCode(address newAddress)\n        external override\n    {\n        _requireAuthorised();\n        _updateCodeAddress(newAddress);\n    }\n\n    /**************************************************************************\n    * SuperfluidGovernanceBase\n    **************************************************************************/\n\n    function _requireAuthorised(ISuperfluid /*host*/)\n        internal view override\n    {\n        _requireAuthorised();\n    }\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/gov/SuperfluidGovernanceII.sol",
  "ast": {
    "absolutePath": "project:/contracts/gov/SuperfluidGovernanceII.sol",
    "exportedSymbols": {
      "ISuperfluid": [
        25647
      ],
      "Ownable": [
        651
      ],
      "SuperfluidGovernanceBase": [
        22799
      ],
      "SuperfluidGovernanceII": [
        22875
      ],
      "SuperfluidGovernanceIIProxy": [
        22817
      ],
      "UUPSProxiable": [
        47678
      ],
      "UUPSProxy": [
        47735
      ]
    },
    "id": 22876,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22801,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:41"
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxy.sol",
        "file": "../upgradability/UUPSProxy.sol",
        "id": 22803,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22876,
        "sourceUnit": 47736,
        "src": "60:59:41",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22802,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47735,
              "src": "69:9:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 22805,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22876,
        "sourceUnit": 652,
        "src": "120:69:41",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22804,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 651,
              "src": "129:7:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "id": 22807,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22876,
        "sourceUnit": 47679,
        "src": "190:67:41",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22806,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47678,
              "src": "199:13:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/gov/SuperfluidGovernanceBase.sol",
        "file": "./SuperfluidGovernanceBase.sol",
        "id": 22809,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22876,
        "sourceUnit": 22800,
        "src": "258:74:41",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22808,
              "name": "SuperfluidGovernanceBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22799,
              "src": "267:24:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../interfaces/superfluid/ISuperfluid.sol",
        "id": 22811,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22876,
        "sourceUnit": 25648,
        "src": "333:71:41",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22810,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25647,
              "src": "342:11:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22813,
              "name": "Ownable",
              "nameLocations": [
                "694:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "694:7:41"
            },
            "id": 22814,
            "nodeType": "InheritanceSpecifier",
            "src": "694:7:41"
          },
          {
            "baseName": {
              "id": 22815,
              "name": "UUPSProxy",
              "nameLocations": [
                "703:9:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47735,
              "src": "703:9:41"
            },
            "id": 22816,
            "nodeType": "InheritanceSpecifier",
            "src": "703:9:41"
          }
        ],
        "canonicalName": "SuperfluidGovernanceIIProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22812,
          "nodeType": "StructuredDocumentation",
          "src": "406:202:41",
          "text": " @title A proxy for governance which is both ownable and upgradable\n @author Superfluid\n IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!"
        },
        "fullyImplemented": true,
        "id": 22817,
        "linearizedBaseContracts": [
          22817,
          47735,
          703,
          651,
          2672
        ],
        "name": "SuperfluidGovernanceIIProxy",
        "nameLocation": "663:27:41",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 22876,
        "src": "654:62:41",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22818,
              "name": "Ownable",
              "nameLocations": [
                "757:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "757:7:41"
            },
            "id": 22819,
            "nodeType": "InheritanceSpecifier",
            "src": "757:7:41"
          },
          {
            "baseName": {
              "id": 22820,
              "name": "UUPSProxiable",
              "nameLocations": [
                "770:13:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47678,
              "src": "770:13:41"
            },
            "id": 22821,
            "nodeType": "InheritanceSpecifier",
            "src": "770:13:41"
          },
          {
            "baseName": {
              "id": 22822,
              "name": "SuperfluidGovernanceBase",
              "nameLocations": [
                "789:24:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22799,
              "src": "789:24:41"
            },
            "id": 22823,
            "nodeType": "InheritanceSpecifier",
            "src": "789:24:41"
          }
        ],
        "canonicalName": "SuperfluidGovernanceII",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22875,
        "linearizedBaseContracts": [
          22875,
          22799,
          25786,
          47678,
          872,
          651,
          2672
        ],
        "name": "SuperfluidGovernanceII",
        "nameLocation": "727:22:41",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "8c809f9b",
            "id": 22825,
            "name": "SF_GOV_II_ONLY_OWNER",
            "nameLocation": "826:20:41",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 22824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:41"
            },
            "src": "820:29:41"
          },
          {
            "body": {
              "id": 22837,
              "nodeType": "Block",
              "src": "897:75:41",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22828,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "911:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 22829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "911:7:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22830,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2662,
                        "src": "922:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 22831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "922:12:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "911:23:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22836,
                  "nodeType": "IfStatement",
                  "src": "907:58:41",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22833,
                        "name": "SF_GOV_II_ONLY_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22825,
                        "src": "943:20:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 22834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "943:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 22835,
                    "nodeType": "RevertStatement",
                    "src": "936:29:41"
                  }
                }
              ]
            },
            "id": 22838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorised",
            "nameLocation": "863:18:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:41"
            },
            "returnParameters": {
              "id": 22827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:0:41"
            },
            "scope": 22875,
            "src": "854:118:41",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              47618
            ],
            "body": {
              "id": 22848,
              "nodeType": "Block",
              "src": "1223:107:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e5375706572666c756964476f7665726e616e636549492e696d706c656d656e746174696f6e",
                        "id": 22845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1250:72:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42262e3b6ca1f8f82e158e1ac4ddf4e6273aa6499266ae17bcaceb2383054239",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42262e3b6ca1f8f82e158e1ac4ddf4e6273aa6499266ae17bcaceb2383054239",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\""
                        }
                      ],
                      "id": 22844,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1240:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 22846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:83:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 22843,
                  "id": 22847,
                  "nodeType": "Return",
                  "src": "1233:90:41"
                }
              ]
            },
            "functionSelector": "52d1902d",
            "id": 22849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "1168:13:41",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22840,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1196:8:41"
            },
            "parameters": {
              "id": 22839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:41"
            },
            "returnParameters": {
              "id": 22843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22842,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22849,
                  "src": "1214:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22841,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1213:9:41"
            },
            "scope": 22875,
            "src": "1159:171:41",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              47606
            ],
            "body": {
              "id": 22862,
              "nodeType": "Block",
              "src": "1406:77:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22855,
                      "name": "_requireAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22838,
                        22874
                      ],
                      "referencedDeclaration": 22838,
                      "src": "1416:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 22856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:20:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22857,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:20:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22859,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22851,
                        "src": "1465:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22858,
                      "name": "_updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47671,
                      "src": "1446:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22861,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:30:41"
                }
              ]
            },
            "functionSelector": "46951954",
            "id": 22863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCode",
            "nameLocation": "1345:10:41",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22853,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1393:8:41"
            },
            "parameters": {
              "id": 22852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22851,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1364:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 22863,
                  "src": "1356:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:20:41"
            },
            "returnParameters": {
              "id": 22854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:41"
            },
            "scope": 22875,
            "src": "1336:147:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              22798
            ],
            "body": {
              "id": 22873,
              "nodeType": "Block",
              "src": "1766:37:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22870,
                      "name": "_requireAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22838,
                        22874
                      ],
                      "referencedDeclaration": 22838,
                      "src": "1776:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 22871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:20:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22872,
                  "nodeType": "ExpressionStatement",
                  "src": "1776:20:41"
                }
              ]
            },
            "id": 22874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorised",
            "nameLocation": "1690:18:41",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22868,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1753:8:41"
            },
            "parameters": {
              "id": 22867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22874,
                  "src": "1709:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25647",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 22865,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22864,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1709:11:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25647,
                      "src": "1709:11:41"
                    },
                    "referencedDeclaration": 25647,
                    "src": "1709:11:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25647",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1708:22:41"
            },
            "returnParameters": {
              "id": 22869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:0:41"
            },
            "scope": 22875,
            "src": "1681:122:41",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 22876,
        "src": "718:1087:41",
        "usedErrors": [
          22825,
          25658,
          25660
        ]
      }
    ],
    "src": "35:1771:41"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-08-28T20:10:53.531Z",
  "devdoc": {
    "author": "Superfluid IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!",
    "kind": "dev",
    "methods": {
      "initializeProxy(address)": {
        "details": "Proxy initialization function.      This should only be called once and it is permission-less.",
        "params": {
          "initialAddress": "Initial logic contract code address to be used."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A proxy for governance which is both ownable and upgradable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}