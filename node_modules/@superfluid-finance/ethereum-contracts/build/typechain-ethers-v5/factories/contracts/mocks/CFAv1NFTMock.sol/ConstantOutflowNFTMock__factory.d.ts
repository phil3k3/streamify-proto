import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConstantOutflowNFTMock, ConstantOutflowNFTMockInterface } from "../../../../contracts/mocks/CFAv1NFTMock.sol/ConstantOutflowNFTMock";
type ConstantOutflowNFTMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ConstantOutflowNFTMock__factory extends ContractFactory {
    constructor(...args: ConstantOutflowNFTMockConstructorParams);
    deploy(host: string, constantInflowNFT: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ConstantOutflowNFTMock>;
    getDeployTransaction(host: string, constantInflowNFT: string, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): ConstantOutflowNFTMock;
    connect(signer: Signer): ConstantOutflowNFTMock__factory;
    static readonly bytecode = "0x60e06040523480156200001157600080fd5b506040516200259838038062002598833981016040819052620000349162000103565b6001600160a01b03821660a0819052604051635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd360048201528391839183919063b6d200de90602401602060405180830381865afa158015620000a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ca919062000142565b6001600160a01b039081166080529190911660c052506200016992505050565b6001600160a01b03811681146200010057600080fd5b50565b600080604083850312156200011757600080fd5b82516200012481620000ea565b60208401519092506200013781620000ea565b809150509250929050565b6000602082840312156200015557600080fd5b81516200016281620000ea565b9392505050565b60805160a05160c0516123c7620001d16000396000818161035801528181610bf301528181610ced0152610e04015260008181610331015261071701526000818161028201528181610b6601528181610c6901528181610d6501526114c501526123c76000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635dff7d901161011a578063a22cb465116100ad578063c87b56dd1161007c578063c87b56dd146104c4578063e985e9c5146104d7578063eb54a7ca146104ea578063ef1f0237146104fd578063f7e3d9831461051057600080fd5b8063a22cb46514610483578063a497325b14610496578063b7e21b121461049e578063b88d4fde146104b157600080fd5b806389f71d2d116100e957806389f71d2d146104075780638d47859e1461041a57806395d89b41146104735780639903ad381461047b57600080fd5b80635dff7d90146103c55780636352211e146103d85780636c0360eb146103eb57806370a08231146103f357600080fd5b806342842e0e116101925780634c5c0c85116101615780634c5c0c85146103535780634cd88b761461037a57806350d75d251461038d57806352d1902d1461039557600080fd5b806342842e0e146102f35780634695195414610306578063480954c31461031957806349f289dc1461032c57600080fd5b806318156101116101ce578063181561011461027d57806323b872dd146102a45780632f388560146102b757806340d3597d146102ca57600080fd5b806301ffc9a71461020057806306fdde0314610228578063081812fc1461023d578063095ea7b314610268575b600080fd5b61021361020e366004611a76565b610523565b60405190151581526020015b60405180910390f35b610230610575565b60405161021f9190611ac4565b61025061024b366004611af7565b610607565b6040516001600160a01b03909116815260200161021f565b61027b610276366004611b25565b61062e565b005b6102507f000000000000000000000000000000000000000000000000000000000000000081565b61027b6102b2366004611b51565b6106ba565b61027b6102c5366004611af7565b6106ec565b6102506102d8366004611af7565b6000908152600360205260409020546001600160a01b031690565b61027b610301366004611b51565b6106f8565b61027b610314366004611b92565b610713565b61027b610327366004611af7565b6107cf565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b61027b610388366004611c7c565b6107d8565b6102506108be565b7f87e44dce6a0d65a5ccf441783661f5727c2624b1f0088bbe957ce2c95406b7845b60405190815260200161021f565b6102506103d3366004611af7565b6108ed565b6102506103e6366004611af7565b6108f8565b61023061092d565b6103b7610401366004611b92565b50600190565b6103b7610415366004611ce0565b61094d565b61042d610428366004611af7565b610962565b6040805182516001600160a01b03908116825260208085015182169083015283830151169181019190915260609182015163ffffffff169181019190915260800161021f565b6102306109e3565b61027b6109f2565b61027b610491366004611d2b565b610ab4565b610230610abf565b61027b6104ac366004611d69565b610adb565b61027b6104bf366004611dba565b610aed565b6102306104d2366004611af7565b610b20565b6102136104e5366004611e3a565b610b2d565b61027b6104f8366004611ce0565b610b5b565b61027b61050b366004611ce0565b610c5e565b61027b61051e366004611ce0565b610d5a565b60006301ffc9a760e01b6001600160e01b03198316148061055457506380ac58cd60e01b6001600160e01b03198316145b8061056f5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606001805461058490611e68565b80601f01602080910402602001604051908101604052809291908181526020018280546105b090611e68565b80156105fd5780601f106105d2576101008083540402835291602001916105fd565b820191906000526020600020905b8154815290600101906020018083116105e057829003601f168201915b5050505050905090565b600061061282610e33565b506000908152600360205260409020546001600160a01b031690565b6000610639826108f8565b9050806001600160a01b0316836001600160a01b03160361066d5760405163e4790b2560e01b815260040160405180910390fd5b336001600160a01b0382161480159061068d575061068b8133610b2d565b155b156106ab5760405163519a92c160e11b815260040160405180910390fd5b6106b58383610e59565b505050565b6106c43382610ec7565b6106e1576040516312a8eb0360e11b815260040160405180910390fd5b6106b5838383610f25565b6106f581610f3e565b50565b6106b583838360405180602001604052806000815250610aed565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663731aed6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611ea2565b9050336001600160a01b038216146107c25760405163ebb7505b60e01b815260040160405180910390fd5b6107cb82610f6e565b5050565b6106f5816111a8565b600054610100900460ff16158080156107f85750600054600160ff909116105b806108125750303b158015610812575060005460ff166001145b6108375760405162461bcd60e51b815260040161082e90611ebf565b60405180910390fd5b6000805460ff19166001179055801561085a576000805461ff0019166101001790555b60016108668482611f5b565b5060026108738382611f5b565b5080156106b5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006108e87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600061056f82611244565b60008061090483611244565b90506001600160a01b03811661056f5760405163eab95e3b60e01b815260040160405180910390fd5b60606040518060600160405280602d8152602001612365602d9139905090565b600061095a848484611262565b949350505050565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260166020908152604091829020825160808101845281546001600160a01b039081168252600183015481169382019390935260029091015491821692810192909252600160a01b900463ffffffff16606082015290565b60606002805461058490611e68565b600054610100900460ff1615808015610a125750600054600160ff909116105b80610a2c5750303b158015610a2c575060005460ff166001145b610a485760405162461bcd60e51b815260040161082e90611ebf565b6000805460ff191660011790558015610a6b576000805461ff0019166101001790555b80156106f5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b6107cb3383836112ae565b6040518060600160405280602d8152602001612365602d913981565b610ae78484848461134d565b50505050565b610af73383610ec7565b610b14576040516312a8eb0360e11b815260040160405180910390fd5b610ae78484848461146a565b606061056f826000611475565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ba45760405163d367b64f60e01b815260040160405180910390fd5b6000610bb1848484611262565b6000818152601660205260409020600101549091506001600160a01b031615610ae757610bdd81610f3e565b604051630179c42b60e51b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f388560906024015b600060405180830381600087803b158015610c4057600080fd5b505af1158015610c54573d6000803e3d6000fd5b5050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ca75760405163d367b64f60e01b815260040160405180910390fd5b6000610cb4848484611262565b6000818152601660205260409020600101549091506001600160a01b031615610ae757604051630852cd8d60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b50505050610ae7816111a8565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610da35760405163d367b64f60e01b815260040160405180910390fd5b6000610db0848484611262565b6000818152601660205260409020600101549091506001600160a01b0316610ae757610dde8484848461134d565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401610c26565b610e3c816115d0565b6106f55760405163eab95e3b60e01b815260040160405180910390fd5b600081815260036020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e8e82611244565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ed3836108f8565b9050806001600160a01b0316846001600160a01b03161480610efa5750610efa8185610b2d565b8061095a5750836001600160a01b0316610f1384610607565b6001600160a01b031614949350505050565b60405163553a3f6560e11b815260040160405180910390fd5b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610aa9565b6000610f987f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b031603610fee5760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c65000000604482015260640161082e565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611050919061201b565b7f87e44dce6a0d65a5ccf441783661f5727c2624b1f0088bbe957ce2c95406b784146110ca5760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b606482015260840161082e565b6001600160a01b03811630036111225760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f7000000000000000604482015260640161082e565b61114a817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7f87e44dce6a0d65a5ccf441783661f5727c2624b1f0088bbe957ce2c95406b784604080519182526001600160a01b038416602083015201610aa9565b60006111b382611244565b600083815260036020526040902080546001600160a01b0319169055905060008281526016602052604080822080546001600160a01b03199081168255600182018054909116905560020180546001600160c01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000908152601660205260409020600101546001600160a01b031690565b60408051466020808301919091526001600160a01b03958616828401529385166060820152919093166080808301919091528351808303909101815260a0909101909252815191012090565b816001600160a01b0316836001600160a01b0316036112e05760405163d3c7732960e01b815260040160405180910390fd5b6001600160a01b03838116600081815260046020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03831661136357611363612034565b816001600160a01b0316836001600160a01b03160361138457611384612034565b61138d816115d0565b1561139a5761139a612034565b604080516080810182526001600160a01b038087168252858116602080840182815287841685870190815263ffffffff4281166060880190815260008a81526016909552888520975188549088166001600160a01b0319918216178955935160018901805491891691909516179093559051600290960180549251909116600160a01b026001600160c01b03199092169590941694909417939093179091559151839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505050565b610ae7848484610f25565b6060600061148284610962565b805160208201516040808401519051631cd43d1160e31b81526001600160a01b0380851660048301529283166024820152908216604482015292935090916000917f0000000000000000000000000000000000000000000000000000000000000000169063e6a1e88890606401608060405180830381865afa15801561150c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611530919061204a565b505091505061153d61092d565b611554826bffffffffffffffffffffffff166115ed565b8661157b57604051806040016040528060048152602001637472756560e01b81525061159a565b6040518060400160405280600581526020016466616c736560d81b8152505b6115a389611680565b6040516020016115b694939291906120aa565b604051602081830303815290604052935050505092915050565b6000806115dc83611244565b6001600160a01b0316141592915050565b606060006115fa836117fb565b600101905060008167ffffffffffffffff81111561161a5761161a611baf565b6040519080825280601f01601f191660200182016040528015611644576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461164e57509392505050565b6060600061168d83610962565b90506116a781600001516001600160a01b031660146118d3565b6116b0466115ed565b82600001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261171a9190810190612132565b61173284602001516001600160a01b031660146118d3565b61174a85604001516001600160a01b031660146118d3565b6117bb86600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561178f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b391906121a9565b60ff166115ed565b6117ce876060015163ffffffff166115ed565b6040516020016117e497969594939291906121cc565b604051602081830303815290604052915050919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061183a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611866576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061188457662386f26fc10000830492506010015b6305f5e100831061189c576305f5e100830492506008015b61271083106118b057612710830492506004015b606483106118c2576064830492506002015b600a831061056f5760010192915050565b606060006118e283600261230d565b6118ed906002612324565b67ffffffffffffffff81111561190557611905611baf565b6040519080825280601f01601f19166020018201604052801561192f576020820181803683370190505b509050600360fc1b8160008151811061194a5761194a612337565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061197957611979612337565b60200101906001600160f81b031916908160001a905350600061199d84600261230d565b6119a8906001612324565b90505b6001811115611a20576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106119dc576119dc612337565b1a60f81b8282815181106119f2576119f2612337565b60200101906001600160f81b031916908160001a90535060049490941c93611a198161234d565b90506119ab565b508315611a6f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161082e565b9392505050565b600060208284031215611a8857600080fd5b81356001600160e01b031981168114611a6f57600080fd5b60005b83811015611abb578181015183820152602001611aa3565b50506000910152565b6020815260008251806020840152611ae3816040850160208701611aa0565b601f01601f19169190910160400192915050565b600060208284031215611b0957600080fd5b5035919050565b6001600160a01b03811681146106f557600080fd5b60008060408385031215611b3857600080fd5b8235611b4381611b10565b946020939093013593505050565b600080600060608486031215611b6657600080fd5b8335611b7181611b10565b92506020840135611b8181611b10565b929592945050506040919091013590565b600060208284031215611ba457600080fd5b8135611a6f81611b10565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611bee57611bee611baf565b604052919050565b600067ffffffffffffffff821115611c1057611c10611baf565b50601f01601f191660200190565b6000611c31611c2c84611bf6565b611bc5565b9050828152838383011115611c4557600080fd5b828260208301376000602084830101529392505050565b600082601f830112611c6d57600080fd5b611a6f83833560208501611c1e565b60008060408385031215611c8f57600080fd5b823567ffffffffffffffff80821115611ca757600080fd5b611cb386838701611c5c565b93506020850135915080821115611cc957600080fd5b50611cd685828601611c5c565b9150509250929050565b600080600060608486031215611cf557600080fd5b8335611d0081611b10565b92506020840135611d1081611b10565b91506040840135611d2081611b10565b809150509250925092565b60008060408385031215611d3e57600080fd5b8235611d4981611b10565b915060208301358015158114611d5e57600080fd5b809150509250929050565b60008060008060808587031215611d7f57600080fd5b8435611d8a81611b10565b93506020850135611d9a81611b10565b92506040850135611daa81611b10565b9396929550929360600135925050565b60008060008060808587031215611dd057600080fd5b8435611ddb81611b10565b93506020850135611deb81611b10565b925060408501359150606085013567ffffffffffffffff811115611e0e57600080fd5b8501601f81018713611e1f57600080fd5b611e2e87823560208401611c1e565b91505092959194509250565b60008060408385031215611e4d57600080fd5b8235611e5881611b10565b91506020830135611d5e81611b10565b600181811c90821680611e7c57607f821691505b602082108103611e9c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611eb457600080fd5b8151611a6f81611b10565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b601f8211156106b557600081815260208120601f850160051c81016020861015611f345750805b601f850160051c820191505b81811015611f5357828155600101611f40565b505050505050565b815167ffffffffffffffff811115611f7557611f75611baf565b611f8981611f838454611e68565b84611f0d565b602080601f831160018114611fbe5760008415611fa65750858301515b600019600386901b1c1916600185901b178555611f53565b600085815260208120601f198616915b82811015611fed57888601518255948401946001909101908401611fce565b508582101561200b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561202d57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b6000806000806080858703121561206057600080fd5b84519350602085015180600b0b811461207857600080fd5b6040860151606090960151949790965092505050565b600081516120a0818560208601611aa0565b9290920192915050565b600085516120bc818460208a01611aa0565b693f666c6f77526174653d60b01b90830190815285516120e381600a840160208a01611aa0565b69266f7574676f696e673d60b01b600a9290910191820152845161210e816014840160208901611aa0565b8451910190612124816014840160208801611aa0565b016014019695505050505050565b60006020828403121561214457600080fd5b815167ffffffffffffffff81111561215b57600080fd5b8201601f8101841361216c57600080fd5b805161217a611c2c82611bf6565b81815285602083850101111561218f57600080fd5b6121a0826020830160208601611aa0565b95945050505050565b6000602082840312156121bb57600080fd5b815160ff81168114611a6f57600080fd5b6e26746f6b656e5f616464726573733d60881b8152600088516121f681600f850160208d01611aa0565b6926636861696e5f69643d60b01b600f918401918201528851612220816019840160208d01611aa0565b6d26746f6b656e5f73796d626f6c3d60901b60199290910191820152875161224f816027840160208c01611aa0565b672673656e6465723d60c01b60279290910191820152865161227881602f840160208b01611aa0565b692672656365697665723d60b01b602f92909101918201526122e96122e36122cb6122c56122a9603986018b61208e565b6f26746f6b656e5f646563696d616c733d60801b815260100190565b8861208e565b6b2673746172745f646174653d60a01b8152600c0190565b8561208e565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761056f5761056f6122f7565b8082018082111561056f5761056f6122f7565b634e487b7160e01b600052603260045260246000fd5b60008161235c5761235c6122f7565b50600019019056fe68747470733a2f2f6e66742e7375706572666c7569642e66696e616e63652f6366612f76322f6765746d657461a26469706673582212206ec4d47e59d519454f860131cb98e47cd93aa750bdcb86c0f9ee401b310a1afe64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluid";
            readonly name: "host";
            readonly type: "address";
        }, {
            readonly internalType: "contract IConstantInflowNFT";
            readonly name: "constantInflowNFT";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_APPROVE_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_APPROVE_TO_CALLER";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_APPROVE_TO_CURRENT_OWNER";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_INVALID_TOKEN_ID";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_ONLY_SUPER_TOKEN_FACTORY";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_TRANSFER_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_TRANSFER_FROM_INCORRECT_OWNER";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_TRANSFER_IS_NOT_ALLOWED";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CFA_NFT_TRANSFER_TO_ZERO_ADDRESS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "COF_NFT_INVALID_SUPER_TOKEN";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "COF_NFT_MINT_TO_AND_FLOW_RECEIVER_SAME";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "COF_NFT_MINT_TO_ZERO_ADDRESS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "COF_NFT_ONLY_CONSTANT_INFLOW";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "COF_NFT_ONLY_FLOW_AGREEMENTS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "COF_NFT_TOKEN_ALREADY_EXISTS";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "approved";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "uuid";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "codeAddress";
            readonly type: "address";
        }];
        readonly name: "CodeUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "MetadataUpdate";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "CONSTANT_FLOW_AGREEMENT_V1";
        readonly outputs: readonly [{
            readonly internalType: "contract IConstantFlowAgreementV1";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "CONSTANT_INFLOW_NFT";
        readonly outputs: readonly [{
            readonly internalType: "contract IConstantInflowNFT";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "DEFAULT_BASE_URI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "HOST";
        readonly outputs: readonly [{
            readonly internalType: "contract ISuperfluid";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "baseURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "castrate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "flowDataByTokenId";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "superToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "flowSender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "flowReceiver";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "flowStartDate";
                readonly type: "uint32";
            }];
            readonly internalType: "struct IFlowNFTBase.FlowNFTData";
            readonly name: "flowData";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getCodeAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "codeAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "superToken";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }];
        readonly name: "getTokenId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "nftName";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "nftSymbol";
            readonly type: "string";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_tokenId";
            readonly type: "uint256";
        }];
        readonly name: "mockBurn";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_tokenId";
            readonly type: "uint256";
        }];
        readonly name: "mockGetApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_superToken";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_flowReceiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_newTokenId";
            readonly type: "uint256";
        }];
        readonly name: "mockMint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_tokenId";
            readonly type: "uint256";
        }];
        readonly name: "mockOwnerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluidToken";
            readonly name: "superToken";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "flowSender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "flowReceiver";
            readonly type: "address";
        }];
        readonly name: "onCreate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluidToken";
            readonly name: "superToken";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "flowSender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "flowReceiver";
            readonly type: "address";
        }];
        readonly name: "onDelete";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluidToken";
            readonly name: "superToken";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "flowSender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "flowReceiver";
            readonly type: "address";
        }];
        readonly name: "onUpdate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "proxiableUUID";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "triggerMetadataUpdate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }];
        readonly name: "updateCode";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ConstantOutflowNFTMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ConstantOutflowNFTMock;
}
export {};
//# sourceMappingURL=ConstantOutflowNFTMock__factory.d.ts.map