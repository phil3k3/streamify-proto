import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SuperAppMockUsingDeprecatedRegisterApp, SuperAppMockUsingDeprecatedRegisterAppInterface } from "../../../../contracts/mocks/SuperAppMocks.sol/SuperAppMockUsingDeprecatedRegisterApp";
type SuperAppMockUsingDeprecatedRegisterAppConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SuperAppMockUsingDeprecatedRegisterApp__factory extends ContractFactory {
    constructor(...args: SuperAppMockUsingDeprecatedRegisterAppConstructorParams);
    deploy(host: string, configWord: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<SuperAppMockUsingDeprecatedRegisterApp>;
    getDeployTransaction(host: string, configWord: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): SuperAppMockUsingDeprecatedRegisterApp;
    connect(signer: Signer): SuperAppMockUsingDeprecatedRegisterApp__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b5060405161010f38038061010f833981016040819052602c91608a565b6040516315a722b960e31b8152600481018290526001600160a01b0383169063ad3915c890602401600060405180830381600087803b158015606d57600080fd5b505af11580156080573d6000803e3d6000fd5b50505050505060c2565b60008060408385031215609c57600080fd5b82516001600160a01b038116811460b257600080fd5b6020939093015192949293505050565b603f806100d06000396000f3fe6080604052600080fdfea26469706673582212208a47fe7d66f00a0e7374351cab6b56d640b05905406dfe4312cb5c0f5824dcc564736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluid";
            readonly name: "host";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "configWord";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }];
    static createInterface(): SuperAppMockUsingDeprecatedRegisterAppInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SuperAppMockUsingDeprecatedRegisterApp;
}
export {};
//# sourceMappingURL=SuperAppMockUsingDeprecatedRegisterApp__factory.d.ts.map